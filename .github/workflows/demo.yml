name: Classroom Platform CI/CD

on:
  push:
    branches: [ "master", "staging" ]
  pull_request:
    branches: [ "master" ]

env:
  TF_VERSION: 1.5.0
  WORKING_DIR: . 

jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform -chdir=${{ env.WORKING_DIR }} init -backend-config=backend.hcl -input=false

      - name: Terraform Validate
        run: terraform -chdir=${{ env.WORKING_DIR }} validate

  deploy-staging:
    runs-on: ubuntu-latest
    needs: terraform-validate
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Plan (staging)
        run: terraform -chdir=${{ env.WORKING_DIR }} plan -out=tfplan -var="env=staging"

      - name: Terraform Apply (staging)
        run: terraform -chdir=${{ env.WORKING_DIR }} apply -auto-approve tfplan

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment: production   
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Plan (prod)
        run: terraform -chdir=${{ env.WORKING_DIR }} plan -out=tfplan-prod -var="env=prod"

      - name: Terraform Apply (prod)
        run: terraform -chdir=${{ env.WORKING_DIR }} apply -auto-approve tfplan-prod
